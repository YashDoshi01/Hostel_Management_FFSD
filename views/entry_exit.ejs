<div class="bg-white rounded-lg shadow-lg p-6">
  <h2 class="text-3xl font-bold text-gray-800 mb-6">Entry/Exit Management</h2>

  <form id="entryExitForm" class="space-y-6">
    <div>
      <label for="destination" class="block text-sm font-medium text-gray-700"
        >Destination</label
      >
      <input
        type="text"
        id="destination"
        name="destination"
        class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500"
        required
      />
    </div>

    <div>
      <label for="purpose" class="block text-sm font-medium text-gray-700"
        >Purpose</label
      >
      <textarea
        id="purpose"
        name="purpose"
        rows="3"
        class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500"
        required
      ></textarea>
    </div>

    <div>
      <label
        for="expectedReturn"
        class="block text-sm font-medium text-gray-700"
        >Expected Return Date/Time</label
      >
      <input
        type="datetime-local"
        id="expectedReturn"
        name="expectedReturn"
        class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500"
        required
      />
    </div>

    <div class="flex justify-end space-x-4">
      <button
        type="submit"
        class="inline-flex justify-center py-2 px-4 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-green-600 hover:bg-green-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-green-500"
      >
        Mark Exit
      </button>
      <button
        type="button"
        id="markReturn"
        class="inline-flex justify-center py-2 px-4 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500"
      >
        Mark Return
      </button>
    </div>
  </form>

  <div id="message" class="mt-4 text-center text-sm"></div>

  <!-- Entry/Exit History -->
  <div class="mt-8">
    <h3 class="text-2xl font-bold text-gray-800 mb-4">Entry/Exit History</h3>
    <div class="overflow-y-auto max-h-96 border rounded-lg">
      <div id="entryExitList" class="divide-y divide-gray-200">
        <!-- History will be dynamically loaded here -->
      </div>
    </div>
  </div>
</div>

<script>
  document
    .getElementById("entryExitForm")
    .addEventListener("submit", async function (e) {
      e.preventDefault();

      const formData = {
        destination: document.getElementById("destination").value,
        purpose: document.getElementById("purpose").value,
        expectedReturn: document.getElementById("expectedReturn").value,
      };

      try {
        const response = await fetch("/services/entry-exit", {
          method: "POST",
          headers: {
            "Content-Type": "application/json",
          },
          body: JSON.stringify(formData),
        });

        const result = await response.json();
        if (response.ok) {
          document.getElementById("message").innerText =
            "Exit marked successfully!";
          document.getElementById("entryExitForm").reset();
          loadEntryExitHistory(); // Refresh the history
        } else {
          document.getElementById("message").innerText =
            result.message || "Failed to mark exit";
        }
      } catch (error) {
        console.error("Error:", error);
        document.getElementById("message").innerText = "Error marking exit";
      }
    });

  document
    .getElementById("markReturn")
    .addEventListener("click", async function () {
      try {
        const response = await fetch("/services/entry-exit/return", {
          method: "POST",
          headers: {
            "Content-Type": "application/json",
          },
        });

        const result = await response.json();
        if (response.ok) {
          document.getElementById("message").innerText =
            "Return marked successfully!";
          loadEntryExitHistory(); // Refresh the history
        } else {
          document.getElementById("message").innerText =
            result.message || "Failed to mark return";
        }
      } catch (error) {
        console.error("Error:", error);
        document.getElementById("message").innerText = "Error marking return";
      }
    });

  async function loadEntryExitHistory() {
    try {
      const response = await fetch("/services/entry-exit/history");
      const history = await response.json();

      const historyList = document.getElementById("entryExitList");
      historyList.innerHTML = history
        .map(
          (entry) => `
        <div class="p-4 hover:bg-gray-50">
          <div class="flex justify-between items-start">
            <div>
              <h4 class="text-lg font-semibold text-gray-900">${
                entry.destination
              }</h4>
              <p class="text-sm text-gray-600">${entry.purpose}</p>
              <p class="text-xs text-gray-500">Expected Return: ${new Date(
                entry.expectedReturn
              ).toLocaleString()}</p>
            </div>
            <div class="flex space-x-2">
              <button 
                onclick="updateEntry(${entry.id})"
                class="text-sm bg-yellow-500 hover:bg-yellow-600 text-white py-1 px-2 rounded"
              >
                Edit
              </button>
              <button 
                onclick="deleteEntry(${entry.id})"
                class="text-sm bg-red-500 hover:bg-red-600 text-white py-1 px-2 rounded"
              >
                Delete
              </button>
            </div>
          </div>
        </div>
      `
        )
        .join("");
    } catch (error) {
      console.error("Error loading history:", error);
    }
  }

  async function updateEntry(id) {
    // Implementation for updating an entry
    const newDestination = prompt("Enter new destination:");
    if (newDestination) {
      try {
        const response = await fetch(`/services/entry-exit/${id}`, {
          method: "PUT",
          headers: {
            "Content-Type": "application/json",
          },
          body: JSON.stringify({ destination: newDestination }),
        });

        if (response.ok) {
          loadEntryExitHistory();
        }
      } catch (error) {
        console.error("Error updating entry:", error);
      }
    }
  }

  async function deleteEntry(id) {
    if (confirm("Are you sure you want to delete this entry?")) {
      try {
        const response = await fetch(`/services/entry-exit/${id}`, {
          method: "DELETE",
        });

        if (response.ok) {
          loadEntryExitHistory();
        }
      } catch (error) {
        console.error("Error deleting entry:", error);
      }
    }
  }

  // Load history when page loads
  loadEntryExitHistory();
</script>
